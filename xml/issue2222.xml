<?xml version='1.0' encoding='utf-8' standalone='no'?>
<!DOCTYPE issue SYSTEM "lwg-issue.dtd" [ 
  <!ENTITY nbsp "&#160;">
] >

<issue num="2222" status="C++14">
<title>Inconsistency in description of <tt>forward_list::splice_after</tt> single-element overload</title>
<section><sref ref="[forward.list.ops]"/></section>
<submitter>Edward Catmur</submitter>
<date>11 Dec 2012</date>

<discussion>

<p>
<sref ref="[forwardlist.ops]"/> p6 has
</p>
<blockquote><pre>
void splice_after(const_iterator position, forward_list&amp; x, const_iterator i);
void splice_after(const_iterator position, forward_list&amp;&amp; x, const_iterator i);
</pre><p>
<i>Effects</i>: Inserts the element following <tt>i</tt> into <tt>*this</tt>, following <tt>position</tt>, 
and removes it from <tt>x</tt>. The result is unchanged if <tt>position == i</tt> or <tt>position == ++i</tt>. 
Pointers and references to <tt>*i</tt> continue to refer to the same element but as a member of <tt>*this</tt>. 
Iterators to <tt>*i</tt> (including <tt>i</tt> itself) continue to refer to the same element, but now behave 
as iterators into <tt>*this</tt>, not into <tt>x</tt>.
</p>
</blockquote>
<p>
This overload splices the element <em>following</em> <tt>i</tt> from <tt>x</tt> to <tt>*this</tt>, so the 
language in the two latter sentences should refer to <tt>++i</tt>:
</p>
<blockquote><p>
Pointers and references to <tt>*++i</tt> continue to refer to the same element but as a member of
<tt>*this</tt>. Iterators to <tt>*++i</tt> continue to refer to the same element, but now behave as iterators
into <tt>*this</tt>, not into <tt>x</tt>.
</p></blockquote>
<p>
</p>

<note>2013-03-15 Issues Teleconference</note>
<p>
Moved to Tentatively Ready.
</p>

<note>2013-04-20 Bristol</note>

</discussion>

<resolution>
<p>This wording is relative to N3485.</p>

<ol>
<li><p>Edit <sref ref="[forwardlist.ops]"/> p6 as indicated:</p>
<blockquote><pre>
void splice_after(const_iterator position, forward_list&amp; x, const_iterator i);
void splice_after(const_iterator position, forward_list&amp;&amp; x, const_iterator i);
</pre>
<p>
-5- <i>Requires</i>: <tt>position</tt> is <tt>before_begin()</tt> or is a dereferenceable iterator 
in the range <tt>[begin(),end())</tt>. The iterator following <tt>i</tt> is a dereferenceable iterator 
in <tt>x</tt>. <tt>get_allocator() == x.get_allocator()</tt>.
<p/>
-6- <i>Effects</i>: Inserts the element following <tt>i</tt> into <tt>*this</tt>, following <tt>position</tt>, 
and removes it from <tt>x</tt>. The result is unchanged if <tt>position == i</tt> or <tt>position == ++i</tt>. 
Pointers and references to <tt>*<ins>++</ins>i</tt> continue to refer to the same element but as a member of 
<tt>*this</tt>. Iterators to <tt>*<ins>++</ins>i</tt> <del>(including <tt>i</tt> itself)</del> continue to
refer to the same element, but now behave as iterators into <tt>*this</tt>, not into <tt>x</tt>.
</p></blockquote>
</li>
</ol>

</resolution>

</issue>
