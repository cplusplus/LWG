<?xml version='1.0' encoding='iso-8859-1' standalone='no'?>
    <!DOCTYPE issue SYSTEM "lwg-issue.dtd" [
        <!ENTITY nbsp " ">
     ]
>
<issue num="423" status="NAD Future">
    <title>effects of negative streamsize in iostreams</title>
    <section><sref ref="[input.output]"/></section>
    <submitter>Martin Sebor</submitter>
    <date>18 Sep 2003</date>
    <discussion>

<p>
A third party test suite tries to exercise istream::ignore(N) with
a negative value of N and expects that the implementation will treat
N as if it were 0. Our implementation asserts that (N >= 0) holds and
aborts the test.
</p>

<p>
I can't find anything in section 27 that prohibits such values but I don't
see what the effects of such calls should be, either (this applies to
a number of unformatted input functions as well as some member functions
of the basic_streambuf template).
</p>

<note>
2009-07 Frankfurt
</note>

<blockquote>
<p>
This is related to LWG <iref ref="255"/>.
</p>
<p>
Move to NAD Future.
</p>
</blockquote>

</discussion>

<resolution>
<p>
I propose that we add to each function in clause 27 that takes an argument,
say N, of type streamsize a Requires clause saying that "N >= 0." The intent
is to allow negative streamsize values in calls to precision() and width()
but disallow it in calls to streambuf::sgetn(), istream::ignore(), or
ostream::write().
</p>

<note>Kona: The LWG agreed that this is probably what we want.  However, we
  need a review to find all places where functions in clause 27 take
  arguments of type streamsize that shouldn't be allowed to go
  negative.  Martin will do that review.</note>

</resolution>
</issue>
