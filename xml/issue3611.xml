<?xml version='1.0' encoding='utf-8' standalone='no'?>
<!DOCTYPE issue SYSTEM "lwg-issue.dtd">

<issue num="3611" status="SG1">
<title>Should <tt>compare_exchange</tt> be allowed to modify the <tt>expected</tt> value on success?</title>
<section><sref ref="[atomics.types.operations]"/></section>
<submitter>Jonathan Wakely</submitter>
<date>29 Sep 2021</date>
<priority>2</priority>

<discussion>
<p>
Currently a <tt>compare_exchange</tt> will only update the <tt>expected</tt> parameter if the
<tt>compare_exchange</tt> fails. This precludes unconditionally clearing the padding bits of the
<tt>expected</tt> object prior to doing the <tt>compare_exchange</tt>, which complicates the
implementation by requiring additional work (e.g. making a copy of the <tt>expected</tt> value
and clearing the copy's padding, then copying it back to expected only if the <tt>compare_exchange</tt> fails).
<p/>
We should consider whether we want to allow modifications to <tt>expected</tt> in the success case,
if such modifications only affect padding bits (i.e. do not alter the value). If we want to allow it,
we need to say so explicitly. The current wording does not permit modifications in the success case,
and any such modification could create a data race if another thread is reading the same memory location
(if it knows a priori that a <tt>compare_exchange_strong</tt> would succeed and so not write to that location).
</p>


<note>2021-10-14; Reflector poll</note>
<p>
Set priority to 2 after reflector poll. Send to SG1.
</p>
<p>
This is <iref ref="2426"/> again,
but the new requirement to clear padding bits changes things.
</p>

</discussion>

<resolution>
</resolution>

</issue>
