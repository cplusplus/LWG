<?xml version='1.0' encoding='utf-8' standalone='no'?>
<!DOCTYPE issue SYSTEM "lwg-issue.dtd">

<issue num="4379" status="New">
<title>`hive::reserve()` needs <i>Throws:</i> element adjusted to match block min/max considerations</title>
<section>
<sref ref="[hive.capacity]"/>
</section>
<submitter>Matt Bentley</submitter>
<date>17 Sep 2025</date>
<priority>3</priority>

<discussion>
<p>
This issue comes from Bloomberg as part of their C++26 comments via Incits. To summarize their case, in a 
call to `reserve(n)`, 
</p>
<blockquote>
<pre>
if (n &gt; capacity() &amp;&amp; capacity() + <i>current-limits</i>.min &gt; max_size()),
</pre>
</blockquote>
<p>
`reserve` should throw, e.g when `max_size=100`, `capacity=80`, <tt><i>current-limits</i>.min</tt> and 
<tt><i>current-limits</i>.max</tt> are `40` and `n=90`. 
<p/>
In addition, in the above scenario if we increase `max_size()` to 140 and `n` to 130, 
we can see that although we could add one block with a capacity of <tt><i>current-limits</i>.min</tt>,
adding another would be impossible; we still cannot make <tt>capacity &gt;= n</tt> without also 
being <tt>&gt; max_size</tt>.
<p/>
This is currently not stated in the <i>Throws:</i> element. I've implemented the requested additional 
throws and they are easily achievable.
</p>

<note>2025-10-22; Reflector poll.</note>
<p>
Set priority to 3 after reflector poll.
</p>
<p>
There was discussion if `reserve()` is allowed to deallocate unused blocks,
that materialized into LWG <iref ref="4380"/>.
</p>
</discussion>

<resolution>
<p>
This wording is relative to <paper num="N5014"/>.
</p>

<ol>


<li><p>Modify <sref ref="[hive.capacity]"/> as indicated:</p>

<blockquote>
<pre>
void reserve(size_type n);
</pre>
<blockquote>
<p>
-3- <i>Effects</i>: If <tt>n &lt;= capacity()</tt> is `true`, there are no effects. Otherwise increases 
`capacity()` by allocating reserved blocks.
<p/>
-4- <i>Postconditions</i>: <tt>capacity() &gt;= n</tt> is `true`.
<p/>
-5- <i>Throws</i>: `length_error` if <del>`n`</del><ins>`capacity()` cannot be made <tt>&gt;= n</tt> without 
being</ins> <tt>&gt; max_size()</tt>, as well as any exceptions thrown by the allocator.
<p/>
[&hellip;]
</p>
</blockquote>
</blockquote>

</li>

</ol>
</resolution>

</issue>
