<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<!DOCTYPE issue SYSTEM "lwg-issue.dtd">

<issue num="2536" status="C++17">
<title>What should <tt>&lt;complex.h&gt;</tt> do?</title>
<section><sref ref="[support.c.headers]"/></section>
<submitter>Richard Smith</submitter>
<date>10 Sep 2015</date>
<priority>2</priority>

<discussion>
<p>
LWG issue <iref ref="1134"/> removed the resolution of LWG <iref ref="551"/>, leaving an incorrect specification for 
the behavior of <tt>&lt;complex.h&gt;</tt>. This header is currently required to make <tt>std::complex</tt> (and 
associated functions) visible in the global namespace, but should not be so required.
</p>

<note>2016-09-09 Issues Resolution Telecon</note>
<p>Move to Tentatively Ready</p>
</discussion>

<resolution>
<p>
This wording is relative to N4527.
</p>

<ol>
<li><p>Add a new paragraph <em>before</em> <sref ref="[depr.c.headers]"/>/2:</p>
<blockquote><p>
<ins>-?- The header <tt>&lt;complex.h&gt;</tt> behaves as if it simply includes the header <tt>&lt;ccomplex&gt;</tt>.</ins>
</p></blockquote>
</li>

<li><p>Change in <sref ref="[depr.c.headers]"/>/2:</p>
<blockquote><p>
-2- Every <ins>other</ins> C header, each of which has a name of the form <tt>name.h</tt>, behaves as if each name placed 
in the standard library namespace by the corresponding <tt>cname</tt> header is placed within the global namespace scope. 
It is unspecified whether these names are first declared or defined within namespace scope (3.3.6) of the namespace
<tt>std</tt> and are then injected into the global namespace scope by explicit <i>using-declarations</i> (7.3.3).
</p></blockquote>
</li>
</ol>
</resolution>

</issue>
