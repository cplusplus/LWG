<?xml version='1.0' encoding='utf-8' standalone='no'?>
<!DOCTYPE issue SYSTEM "lwg-issue.dtd">

<issue num="3532" status="WP">
<title><tt>split_view&lt;V, P&gt;::<i>inner-iterator</i>&lt;true&gt;::operator++(int)</tt> should depend on <tt><i>Base</i></tt></title>
<section><sref ref="[range.lazy.split.inner]"/></section>
<submitter>Casey Carter</submitter>
<date>11 Mar 2021</date>
<priority>99</priority>

<discussion>
<p>
<tt>split_view&lt;V, P&gt;::<i>inner-iterator</i>&lt;Const&gt;::operator++(int)</tt> is specified directly in the 
synopsis in <sref ref="[range.split.inner]"/> as:
</p>
<blockquote><pre>
constexpr decltype(auto) operator++(int) {
  if constexpr (forward_range&lt;V&gt;) {
    auto tmp = *this;
    ++*this;
    return tmp;
  } else
    ++*this;
}
</pre></blockquote>
<p>
The dependency on the properties of <tt>V</tt> here is odd given that we are wrapping an iterator obtained from a 
<tt><i>maybe-const</i>&lt;Const, V&gt;</tt> (aka <tt><i>Base</i></tt>). It seems like this function should instead 
be concerned with <tt>forward_range&lt;<i>Base</i>&gt;</tt>.
</p>

<note>2021-04-20; Reflector poll</note>
<p>
Set status to Tentatively Ready after five votes in favour during reflector poll.
</p>

<note>2021-06-07 Approved at June 2021 virtual plenary. Status changed: Voting &rarr; WP.</note>
</discussion>

<resolution>
<p>
This wording is relative to <a href="https://wg21.link/n4878">N4878</a>.
</p>


<ol>
<li><p>Modify <sref ref="[range.split.inner]"/> as indicated:</p>

<blockquote>
<pre>
constexpr decltype(auto) operator++(int) {
  if constexpr (forward_range&lt;<del>V</del><ins><i>Base</i></ins>&gt;) {
    auto tmp = *this;
    ++*this;
    return tmp;
  } else
    ++*this;
}
</pre>
</blockquote>

</li>

</ol>

</resolution>

</issue>
