<?xml version='1.0' encoding='utf-8' standalone='no'?>
<!DOCTYPE issue SYSTEM "lwg-issue.dtd">

<issue num="4342" status="New">
<title>Missing rvalue reference qualification for <code>task_scheduler::ts-sender::connect()</code></title>
<section><sref ref="[exec.task.scheduler]"/></section>
<submitter>Dietmar KÃ¼hl</submitter>
<date>01 Sep 2025</date>
<priority>99</priority>

<discussion>
<p>
The result of <code>schedule(sched)</code> for a scheduler
<code>sched</code> is only required to be movable. An object of
this type may need to be forwarded to an operation state constructor
by <code>task_scheduler::<i>ts-sender</i>::connect</code>. Thus,
this function should be qualified with an rvalue reference.
</p>
</discussion>

<resolution>
<p>
Add an rvalue qualifier to the declaration of <code>connect</code> in <sref ref="[exec.task.scheduler]"/> paragraph 8:
<blockquote>
<pre>
namespace std::execution {
  class task_scheduler::ts-sender {     // exposition only
  public:
    using sender_concept = sender_t;

    template&lt;receiver Rcvr&gt;
      <i>state</i>&lt;Rcvr&gt; connect(Rcvr&amp;&amp; rcvr)<ins> &amp;&amp;</ins>;
  };
}
</pre>
</blockquote>
</p>
<p>
In the specification in <sref ref="[exec.task.scheduler]"/> paragraph 10 add an rvalue qualifier to <code>connect</code>:
<blockquote>
<pre>
template&lt;receiver Rcvr&gt;
  <i>state</i>&lt;Rcvr&gt; connect(Rcvr&amp;&amp; rcvr)<ins> &amp;&amp;</ins>;
</pre>
<p>-10- <i>Effects</i>: Let <i>r</i> be an object of a type that
models receiver and whose completion handlers result in invoking
the corresponding completion handlers of <code>rcvr</code> or copy thereof.
Returns an object of type <code><i>state</i>&lt;Rcvr&gt;</code> containing an operation state
object initialized with <code>connect(<i>SENDER</i>(*this), std::move(<i>r</i>))</code>.
</p>
</blockquote>
</p>
</resolution>

</issue>
