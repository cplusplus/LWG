<?xml version='1.0' encoding='utf-8' standalone='no'?>
<!DOCTYPE issue SYSTEM "lwg-issue.dtd">

<issue num="3040" status="Tentatively Ready">
<title><tt>basic_string_view::starts_with</tt> <i>Effects</i> are incorrect</title>
<section><sref ref="[string.view.ops]"/></section>
<submitter>Marshall Clow</submitter>
<date>29 Nov 2017</date>
<priority>0</priority>

<discussion>
<p>
The effects of <tt>starts_with</tt> are described as equivalent to <tt>return compare(0, npos, x) == 0</tt>.
<p/>
This is incorrect, because it returns <tt>false</tt> when you check to see if any sequence begins with the empty sequence.
(There are other failure cases, but that one's easy)
<p/>
As a drive-by fix, we can make the <i>Effects:</i> for <tt>starts_with</tt> and <tt>ends_with</tt> clearer.
<p/>
Those are the second and proposed third changes, and they are not required.
</p>

<note>
2017-12-13 Moved to Tentatively Ready after 8 positive votes for P0 on c++std-lib.
</note>

<strong>Previous resolution: [SUPERSEDED]</strong>

<blockquote class="note">
<p>This wording is relative to <a href="http://wg21.link/n4713">N4713</a>.</p>

<ol>
<li><p>Change <sref ref="[string.view.ops]"/> p20 as indicated:</p>

<blockquote>
<pre>constexpr bool starts_with(basic_string_view x) const noexcept;</pre>
<blockquote>
<p>
-20- <i>Effects:</i> Equivalent to: <tt>return <ins>size() &gt;= x.size() &amp;&amp;</ins>
compare(0, <del>npos</del><ins>x.size()</ins>, x) == 0;</tt>
</p>
</blockquote>
</blockquote>
</li>

<li><p>Change <sref ref="[string.view.ops]"/> p21 as indicated:</p>
<blockquote>
<pre>constexpr bool starts_with(charT x) const noexcept;</pre>
<blockquote>
<p>
-21- <i>Effects:</i> Equivalent to: <tt>return <ins>!empty() &amp;&amp;
traits::eq(front(), x)</ins><del>starts_with(basic_string_view(&amp;x, 1))</del>;</tt>
</p>
</blockquote>
</blockquote>
</li>

<li><p>Change <sref ref="[string.view.ops]"/> p24 as indicated:</p>

<blockquote>
<pre>constexpr bool ends_with(charT x) const noexcept;</pre>
<blockquote>
<p>
-24- <i>Effects:</i> Equivalent to: <tt>return <ins>!empty() &amp;&amp; traits::eq(back(),
x)</ins><del>ends_with(basic_string_view(&amp;x, 1))</del>;</tt>
</p>
</blockquote>
</blockquote>
</li>
</ol>
</blockquote>

<note>2018-01-23, Reopening due to a comment of Billy Robert O'Neal III requesting a change of the proposed
wording</note>
<p>
The currently suggested wording has:
</p>
<blockquote><p>
<i>Effects:</i> Equivalent to: <tt>return size() &gt;= x.size() &amp;&amp; compare(0, x.size(), x) == 0;</tt>
</p></blockquote>
<p>
but <tt>compare()</tt> already does the <tt>size() &gt;= x.size()</tt> check.
<p/>
It seems like it should say:
</p>
<blockquote><p>
<i>Effects:</i> Equivalent to: <tt>return substr(0, x.size()) == x;</tt>
</p></blockquote>

<note>
2018-10-29 Moved to Tentatively Ready after 5 positive votes for P0 on c++std-lib.
</note>

</discussion>

<resolution>
<p>This wording is relative to <a href="http://wg21.link/n4713">N4713</a>.</p>

<ol>
<li><p>Change <sref ref="[string.view.ops]"/> p20 as indicated:</p>

<blockquote>
<pre>constexpr bool starts_with(basic_string_view x) const noexcept;</pre>
<blockquote>
<p>
-20- <i>Effects:</i> Equivalent to: <tt>return <ins>substr(0, x.size()) == x</ins><del>compare(0,
npos, x) == 0</del>;</tt>
</p>
</blockquote>
</blockquote>
</li>

<li><p>Change <sref ref="[string.view.ops]"/> p21 as indicated:</p>
<blockquote>
<pre>constexpr bool starts_with(charT x) const noexcept;</pre>
<blockquote>
<p>
-21- <i>Effects:</i> Equivalent to: <tt>return <ins>!empty() &amp;&amp;
traits::eq(front(), x)</ins><del>starts_with(basic_string_view(&amp;x, 1))</del>;</tt>
</p>
</blockquote>
</blockquote>
</li>

<li><p>Change <sref ref="[string.view.ops]"/> p24 as indicated:</p>

<blockquote>
<pre>constexpr bool ends_with(charT x) const noexcept;</pre>
<blockquote>
<p>
-24- <i>Effects:</i> Equivalent to: <tt>return <ins>!empty() &amp;&amp; traits::eq(back(),
x)</ins><del>ends_with(basic_string_view(&amp;x, 1))</del>;</tt>
</p>
</blockquote>
</blockquote>
</li>
</ol>
</resolution>

</issue>
