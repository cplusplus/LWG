<?xml version='1.0' encoding='utf-8' standalone='no'?>
<!DOCTYPE issue SYSTEM "lwg-issue.dtd">

<issue num="3587" status="New">
<title><tt>std::three_way_comparable_with&lt;T, U, void&gt;</tt> can be satisfied but can't be modeled</title>
<section><sref ref="[cmp.concept]"/></section>
<submitter>Jiang An</submitter>
<date>06 Sep 2021</date>
<priority>3</priority>

<discussion>
<p>
Due to the current specification of <tt>std::common_comparison_category</tt>,
<tt><i>compare-as</i>&lt;void, void&gt;</tt> is satisfied. And thus given two types <tt>T</tt>
and <tt>U</tt> with regular <tt>==</tt>, <tt>!=</tt>, <tt>&lt;</tt>, <tt>&gt;</tt>, <tt>&lt;=</tt>,
and <tt>&gt;=</tt> but irregular <tt>&lt;=&gt;</tt> that has return type <tt>void</tt>,
<tt>std::three_way_comparable_with&lt;T, U, void&gt;</tt> is satisfied.
<p/>
However, in this situation <tt>std::three_way_comparable_with&lt;T, U, void&gt;</tt>
can't be modeled, because <tt>Cat(t &lt;=&gt; u) == Cat(C(t) &lt;=&gt; C(u))</tt>
is ill-formed if <tt>Cat</tt> is <tt>void</tt> (see <a href="https://gcc.godbolt.org/z/5c4839qz1">this godbolt link</a>).
<p/>
I don't think this issue has any impact on meaningful codes, but it seems to be a hole in the
current specification.
<p/>
It seems that <tt><i>compares-as</i>&lt;void, void&gt;</tt> should be changed to <tt>false</tt>.
<tt><i>compares-as</i>&lt;NonComparisonCategoryType, void&gt;</tt> might need refinement.
<p/>
(Note: The same problem does not exists for <tt>std::three_way_comparable</tt>, because
<tt>std::three_way_comparable&lt;T, void&gt;</tt> can be modeled if the <tt>&lt;=&gt;</tt> on <tt>T</tt>
has "regular" definition or its return type is not a comparison category type, but the return value
has "regular" semantics)
</p>

<note>2021-09-20; Reflector poll</note>
<p>
Set priority to 3 after reflector poll.
</p>

</discussion>

<resolution>
</resolution>

</issue>
