<?xml version='1.0' encoding='utf-8' standalone='no'?>
<!DOCTYPE issue SYSTEM "lwg-issue.dtd">

<issue num="4347" status="New">
<title><code>task</code>'s stop source is always created</title>
<section><sref ref="[task.promise]"/></section>
<submitter>Dietmar KÃ¼hl</submitter>
<date>01 Sep 2025</date>
<priority>99</priority>

<discussion>
<p>
The type <code>task&lt;...&gt;::promise_type</code> has exposition-only
members <code><i>source</i></code> and <code><i>token</i></code>.
These can be interpreted as always existing which would be a
performance issue for former and an unnecessary constraints for the
latter (because stop tokens aren't required to be default constructible).
</p>
<p>
The intent is that the stop token obtained from the
<code>get_stop_token</code> query of the receiver's environment is
used. Only if this type is different from the <code>task</code>'s
<code>stop_token_type</code> a stop source of type
<code>stop_source_type</code> needs to be created when the
<code>get_stop_token</code> query is used on the promise type's
environment. The stop token doesn't need to be stored at all: it
can either be obtained from the receiver's environment or from the
stop source. The fix is to show the stop source as an optionally
present member of of the operation state and it should be of type
<code>std::optional&lt;stop_source_type&gt;</code> to imply that
it is only created when accessed.
</p>
</discussion>

<resolution>
<p>
</p>
</resolution>

</issue>
