<?xml version='1.0' encoding='utf-8' standalone='no'?>
<!DOCTYPE issue SYSTEM "lwg-issue.dtd">

<issue num="3815" status="Resolved">
<title>Freestanding enumerators specification is lacking</title>
<section><sref ref="[freestanding.item]"/><sref ref="[atomics.syn]"/></section>
<submitter>Ben Craig</submitter>
<date>06 Nov 2022</date>
<priority>99</priority>

<discussion>
<p>
This is a partial resolution of <b><a href="https://github.com/cplusplus/nbballot/issues/442">GB-130</a></b> 
(<sref ref="[atomics.syn]"/> <tt>memory_order_acquire</tt> etc should be freestanding).
<p/>
It's not entirely clear whether the enumerators for the <tt>std::memory_order</tt> enum type are also freestanding, 
as those enumerators aren't shown in the synopsis, only in <sref ref="[atomics.order]"/>.
</p>
<p><strong>Previous resolution [SUPERSEDED]:</strong></p>
<blockquote class="note">
<p>
This wording is relative to <paper num="N4917"/> <b>assuming that LWG <iref ref="3753"/> has been accepted 
(freestanding entity -&gt; freestanding item)</b>.
</p>

<blockquote class="note">
<p>
[<i>Drafting Note:</i> Four mutually exclusive options are prepared, depicted below by <b>Option A</b>, 
<b>Option B</b>, <b>Option C</b>, and <b>Option D</b>, respectively.] 
</p>
</blockquote>

<p>
<b>Option A:</b> Not a defect; no change required. Enumerators of freestanding enums are already part of 
freestanding with the current wording. <sref ref="[freestanding.entity]"/>#2 says the requirements of 
freestanding entities are the same as for hosted entities. The existence of the right enumerators (with the 
appropriate name scoping) are part of the requirements of the enum type.
</p>

<p>
<b>Option B:</b> Not a defect; provide a clarifying note. Same rationale as above, but we make this stance 
clear in <sref ref="[freestanding.entity]"/>#2.
</p>

<ol>
<li><p>Modify <sref ref="[freestanding.entity]"/> (Which has been renamed to [freestanding.item]) as indicated:</p>

<blockquote>
<p>
<b>16.3.3.6 Freestanding items [freestanding.item]</b>
<p/>
[&hellip;]
<p/>
-2- Unless otherwise specified, the requirements on freestanding items on a 
freestanding implementation are the same as the corresponding requirements in a hosted implementation.
<p/>
<ins>[<i>Note</i>: An <i>enumerator</i> places requirements on its enumeration. Freestanding item enumerations have 
the same <i>enumerator</i>s on freestanding implementations and hosted implementations. &mdash; <i>end note</i>]</ins>
<p/>
[&hellip;]
</p>
</blockquote>
</li>

</ol>

<p>
<b>Option C:</b> Add additional normative wording that makes enumerators freestanding if their enumeration types are 
freestanding.
</p>

<ol>
<li><p>Modify <sref ref="[freestanding.entity]"/> (Which has been renamed to [freestanding.item]) as indicated:</p>

<blockquote>
<p>
<b>16.3.3.6 Freestanding items [freestanding.item]</b>
<p/>
-1- A <i>freestanding item</i> is an entity or macro definition that is present in a freestanding implementation and a 
hosted implementation.
<p/>
<ins>-?- An <i>enumerator</i> of a freestanding item enumeration is a freestanding item.</ins>
<p/>
[&hellip;]
</p>
</blockquote>
</li>

</ol>

<p>
<b>Option D:</b> This is <b>Option C</b>, plus it handles class types as well. If enumerators aren't automatically 
included with the existing wording, then arguably, neither are class type members.
</p>

<ol>
<li><p>Modify <sref ref="[freestanding.entity]"/> (Which has been renamed to [freestanding.item]) as indicated:</p>

<blockquote>
<p>
<b>16.3.3.6 Freestanding items [freestanding.item]</b>
<p/>
-1- A <i>freestanding item</i> is an entity or macro definition that is present in a freestanding implementation and a 
hosted implementation.
<p/>
<ins>-?- An <i>enumerator</i> of a freestanding item enumeration is a freestanding item.</ins>
<p/>
<ins>-?- Members of freestanding item class types are freestanding items.</ins>
<p/>
[&hellip;]
</p>
</blockquote>
</li>

</ol>

</blockquote>

<note>2022-11-08; Kona - move to open</note>
<p>This will be resolved by the combined resolution in <iref ref="3753"/>.</p>

<note>2022-11-22 Resolved by <iref ref="3753"/> accepted in Kona. Status changed: Open &rarr; Resolved.</note>
</discussion>

<resolution>
</resolution>

</issue>
