<?xml version='1.0' encoding='utf-8' standalone='no'?>
<!DOCTYPE issue SYSTEM "lwg-issue.dtd">

<issue num="4424" status="New">
<title>`meta::define_aggregate` should require a class type</title>
<section><sref ref="[meta.reflection.define.aggregate]"/></section>
<submitter>Jakub Jelinek</submitter>
<date>20 Oct 2025</date>
<priority>99</priority>

<discussion>
<p>
The `meta::define_aggregate` function doesn't say what happens if <i>C</i>
does not represent a class type.
</p>
<p>It's also unclear whether it should work
with aliases to class types, e.g.
<pre>struct S; using A = S; ... meta::define_aggregate(^^A, {});</pre>
</p>
<p>
And what happens if you try to define a cv-qualified type:
<pre>struct S; meta::define_aggregate(^^const S, {});</pre>
Should this be an error, or inject a definition of the unqualified type?
</p>
<superseded>
<p>
This wording is relative to <paper num="N5014"/>.
</p>

<ol>

<li><p>Modify <sref ref="[meta.reflection.define.aggregate]"/> as indicated:</p>

<blockquote>
<p>-7-
Let <i>C</i> be the class represented by 
<code><ins>dealias(</ins>class_type<ins>)</ins></code>
and <i>r<sub>K</sub></i> be the <i>K</i><sup>th</sup> reflection value
in `mdescrs`.
For every <i>r<sub>K</sub></i> in `mdescrs`,
let (<i>T<sub>K</sub></i>, <i>N<sub>K</sub></i>, <i>A<sub>K</sub></i>,
<i>W<sub>K</sub></i>, <i>NUA<sub>K</sub></i>)
be the corresponding data member description represented by
<i>r<sub>K</sub></i>.
</p>
<p>-8- <i>Constant when</i>:
<ul>
<li><ins>(8.?) &mdash;
`dealias(class_type)` represents a class type;
</ins>
</li>
<li>(8.1) &mdash;
<i>C</i> is incomplete from every point in the evaluation context;
</li>
</ul>
</p>
</blockquote>
</li>
</ol>
</superseded>

<note>2025-10-24; LWG telecon. Jonathan updates wording</note>
<p>Make a minimal change for now, can add support for aliases later.</p>

<note>2025-10-24; Resolves <a href="https://github.com/cplusplus/nbballot/issues/757">US 125-188</a></note>
</discussion>

<resolution>
<p>
This wording is relative to <paper num="N5014"/>.
</p>

<ol>

<li><p>Modify <sref ref="[meta.reflection.define.aggregate]"/> as indicated:</p>

<blockquote>
<p>-7-
Let <i>C</i> be the <del>class</del> <ins>type</ins> represented by
<code>class_type</code>
and <i>r<sub>K</sub></i> be the <i>K</i><sup>th</sup> reflection value
in `mdescrs`.
For every <i>r<sub>K</sub></i> in `mdescrs`,
let (<i>T<sub>K</sub></i>, <i>N<sub>K</sub></i>, <i>A<sub>K</sub></i>,
<i>W<sub>K</sub></i>, <i>NUA<sub>K</sub></i>)
be the corresponding data member description represented by
<i>r<sub>K</sub></i>.
</p>
<p>-8- <i>Constant when</i>:
<ul>
<li><ins>(8.?) &mdash;
`class_type` represents a cv-unqualified class type;
</ins>
</li>
<li>(8.1) &mdash;
<i>C</i> is incomplete from every point in the evaluation context;
</li>
</ul>
</p>
</blockquote>
</li>
</ol>
</resolution>

</issue>
